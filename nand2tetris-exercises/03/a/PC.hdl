// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/PC.hdl

/**
 * A 16-bit counter with load and reset control bits.
 * if      (reset[t] == 1) out[t+1] = 0
 * else if (load[t] == 1)  out[t+1] = in[t]
 * else if (inc[t] == 1)   out[t+1] = out[t] + 1  (integer addition)
 * else                    out[t+1] = out[t]
 */

CHIP PC {
    IN in[16],load,inc,reset;
    OUT out[16];

    PARTS:
    // Get the old value, but incremented:
    Inc16(in=finalOut, out=incrementedOldVal);

    Mux16(a=false, b=incrementedOldVal, sel=inc, out=val1);
    Mux16(a=val1, b=in, sel=load, out=val2);
    Mux16(a=val2, b=false, sel=reset, out=regIn);
    
    // Only assign a new value into the register iff any of load, inc or reset
    // are active. Else, reject all write attempts.
    Or(a=load, b=inc, out=loadOrInc);
    Or(a=loadOrInc, b=reset, out=shouldLoad);

    Register(in=regIn, load=shouldLoad, out=finalOut);

    // Invert `finalOut`.
    Not16(in=finalOut, out=invOut);
    Not16(in=invOut, out=out);
}
